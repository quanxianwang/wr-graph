Wayland Rendering Performance Analysis Tool

Copyright (C) 2014 Intel Corporation
Author: 
      Quanxian Wang <quanxian.wang@intel.com>
      Zhang Xiaoyan <xiaoyanx.zhang@intel.com>

License
-------
General Public License v2.0

Overview
--------
This tool focuses on analyze Wayland Apps or Server rendering performance data and show them with FPS performance charts.
These charts give a clear image of rendering performance status. More important is 
the chart gives developer a hint which step cause the performance issue.

The original objective of this tool is to find the latency and smooth issue in Tizen Modello UI.
However it could be also used for any graphics system, especially for Wayland.

This tool could help to show the rendering performance status and limit performance issue into a small scope for investigation.
We provide this tool to cooperate with other teams who has graphics performance issue, especially which based on Wayland protocol .
Also it is helpful for QA people to generate graphics performance report. 

Tizen Wiki Page provide detailed information. especially the output for every successful user cases.
https://wiki.tizen.org/wiki/Wayland_Rendering_Analysis_Tool

Advantage
--------
     1) Measure Wayland server or its apps performance:
     Until now we don't find any tool to measure performance of Wayland Apps or Wayland server. This tool could provide this. 

     2) Flexible configuration:
     With original design, the tag is defined to define the steps of rendering process, it is convenient to analyze
     any rendering process including xserver, Wayland/Weston, or other graphics rendering server or apps if you defined
     your tags in the rendering process which could be found in your log.

Functions
-------
    1) Generate FPS chart for every app in every rendering cycle
    2) Generate average FPS time chart for every key path in rendering process

Successful User Cases
-------
    1) Modello UI single-touch performance
    2) Modello UI multi-touch performance
    3) Emotion media player performance
    4) weston egl rendering performance
    5) weston terminal application single-touch performance

SOFTWARE DEPENDENCY REQUIREMENT (Ubuntu-12.1)
-------------------------------
        python2.7
        python-cairo
        python-gi-cairo
        python-wxgtk2.0
        python-wxglade
        python-wxmpl
        python-wxtools
        python-wxversion

HOW TO RUN THE TOOL (Ubuntu-12.1)
--------------
        1) Source code
           git clone git://github.com/quanxianwang/wr-graph.git
        2) Install packages depended.
           ubuntu:
           apt-get install python2.7 python-cairo python-wxgtk2.0 python-wxglade python-wxmpl python-wxtools python-wxversion
        3) Collect weston log from target machine(Tizen IVI).
           read appendix A
        4) Run the command
           cd $WR_GRAPH/src
           ./gui.py --output=<output_dir> --config=<config_file> --log=<logfile> --prefix=<output_prefix> -show=<true of false>
           Example                   
           ./gui.py --output=./output/motion/ --config=../config/config.xml --log=./weston.log --show=false

Appendix A
HOW TO COLLECT WESTON LOG
--------------
1) Git clone weston source code
   git clone https://review.tizen.org/git/platform/upstream/weston
   git checkout tizen

2) Install weston patches
   Patches are from weston_patches directory of wr-graph project
   git am $WR-GRAPH/weston_patches/*.patch ...

3) Build weston package following build guide
   In Tizen, please following gbs process to build weston package.

4) Install new weston packages
   rpm -ivh --force weston-*.rpm

5) Edit file /usr/lib/systemd/system/tlm.service
   [Service]
+  Environment=PERF_DEBUG=1

6) Reboot and run your apps
7) Get the log as the parameter of wr-graph command
