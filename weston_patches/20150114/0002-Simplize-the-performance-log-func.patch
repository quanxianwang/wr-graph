From b0a3f8bf81fc6c9212f327c9c293844033248f94 Mon Sep 17 00:00:00 2001
From: Quanxian Wang <quanxian.wang@intel.com>
Date: Fri, 28 Nov 2014 13:35:57 +0800
Subject: [PATCH 2/8] Simplize the performance log func

1) detach from wayland_debug
2) input it in weston.log

Signed-off-by: Quanxian Wang <quanxian.wang@intel.com>
---
 Makefile.am                |    2 --
 clients/profile_analyzer.h |   51 ++++++++++++--------------------------------
 clients/simple-egl.c       |    6 +++---
 clients/window.c           |    8 +++----
 desktop-shell/shell.c      |   11 +++++-----
 src/compositor.c           |   21 +++++++++---------
 src/compositor.h           |   11 ++++++++++
 src/input.c                |   33 ++++++++++++++--------------
 src/profile_analyzer.h     |   45 --------------------------------------
 9 files changed, 63 insertions(+), 125 deletions(-)
 delete mode 100644 src/profile_analyzer.h

diff --git a/Makefile.am b/Makefile.am
index 349da19..12d4574 100644
--- a/Makefile.am
+++ b/Makefile.am
@@ -65,7 +65,6 @@ weston_SOURCES =					\
 	shared/matrix.c					\
 	shared/matrix.h					\
 	shared/zalloc.h					\
-	src/profile_analyze.h				\
 	src/weston-egl-ext.h
 
 nodist_weston_SOURCES =					\
@@ -220,7 +219,6 @@ drm_backend_la_CFLAGS =				\
 drm_backend_la_SOURCES =			\
 	src/compositor-drm.c			\
 	$(INPUT_BACKEND_SOURCES)		\
-	src/profile_analyzer.h			\
 	src/libbacklight.c			\
 	src/libbacklight.h
 
diff --git a/clients/profile_analyzer.h b/clients/profile_analyzer.h
index 7eadfcd..ba01e2d 100644
--- a/clients/profile_analyzer.h
+++ b/clients/profile_analyzer.h
@@ -1,45 +1,22 @@
-#ifndef __PROFILE_ANALYZER_H
-#define __PROFILE_ANALYZER_H
+#ifndef PERF_LOG
+#define PERF_LOG
 
 #include <time.h>
 #include <stdio.h>
 #include <sys/time.h>
-#define ADD_PROFILING_POINT(msg) \
-	do { \
-		struct timespec tp; \
-		unsigned int time; \
-		clock_gettime(CLOCK_REALTIME, &tp); \
-		time = (tp.tv_sec * 1000000L) + (tp.tv_nsec / 1000); \
-		fprintf(stderr, "[%10.3f]profiling_point:%s\n", \
-			time / 1000.0, msg); \
-	} while (0)
-#define ADD_PROFILING_ID(msg) \
-	do { \
-		struct timespec tp; \
-		unsigned int time; \
-		clock_gettime(CLOCK_REALTIME, &tp); \
-		time = (tp.tv_sec * 1000000L) + (tp.tv_nsec / 1000); \
-		fprintf(stderr, "[%10.3f]profiling_id:%s\n", \
-			time / 1000.0, msg); \
-	} while (0)
-
-#define ADD_PROFILING_START(msg) \
-	do { \
-		struct timespec tp; \
-		unsigned int time; \
-		clock_gettime(CLOCK_REALTIME, &tp); \
-		time = (tp.tv_sec * 1000000L) + (tp.tv_nsec / 1000); \
-		fprintf(stderr, "[%10.3f]profiling_start:%s\n", \
-			time / 1000.0, msg); \
-	} while (0)
 
-#define ADD_PROFILING_END(msg) \
+#define START 0
+#define END 1
+#define PERF_TIME(msg, flag) \
 	do { \
-		struct timespec tp; \
-		unsigned int time; \
-		clock_gettime(CLOCK_REALTIME, &tp); \
-		time = (tp.tv_sec * 1000000L) + (tp.tv_nsec / 1000); \
-		fprintf(stderr, "[%10.3f]profiling_end:%s\n", \
-			time / 1000.0, msg); \
+		struct timeval tv; \
+		struct tm *brokendown_time;\
+		char string[128];\
+		gettimeofday(&tv, NULL);\
+		brokendown_time = localtime(&tv.tv_sec);\
+		strftime(string, sizeof string,\
+			 "%H:%M:%S", brokendown_time);\
+		fprintf(stderr, "[%s.%03li] perf_%s:%s\n",\
+			string, tv.tv_usec/1000, flag?"end":"start",msg); \
 	} while (0)
 #endif
diff --git a/clients/simple-egl.c b/clients/simple-egl.c
index d1a853b..0c3deb9 100644
--- a/clients/simple-egl.c
+++ b/clients/simple-egl.c
@@ -380,13 +380,13 @@ void print_cid(struct window *window, int start)
 	sprintf(str, "client_%d", id);
 	if (start) {
 		/* client start */
-		ADD_PROFILING_START(str);
+		PERF_TIME(str, START);
 	} else {
 		/* client end */
-		ADD_PROFILING_END(str);
+		PERF_TIME(str, END);
 		sprintf(str, "MESA_%d", id);
 		/* mesa start */
-		ADD_PROFILING_START(str);
+		PERF_TIME(str, START);
 	}
 }
 
diff --git a/clients/window.c b/clients/window.c
index 5f9f257..9a00da6 100644
--- a/clients/window.c
+++ b/clients/window.c
@@ -2369,8 +2369,8 @@ frame_handle_status(struct window_frame *frame, struct input *input,
 
 	if ((status & FRAME_STATUS_MOVE) && window->xdg_surface) {
 		input_ungrab(input);
-		ADD_PROFILING_END("client touch down");
-		ADD_PROFILING_START("shell process");
+		PERF_TIME("client touch down", END);
+		PERF_TIME("shell process", START);
 		xdg_surface_move(window->xdg_surface,
 				 input_get_seat(input),
 				 window->display->serial);
@@ -3054,8 +3054,8 @@ touch_handle_down(void *data, struct wl_touch *wl_touch,
 			wl_list_insert(&input->touch_point_list, &tp->link);
 
 			if (widget->touch_down_handler) {
-				ADD_PROFILING_END("touch down");
-				ADD_PROFILING_START("client touch down");
+				PERF_TIME("touch down", END);
+				PERF_TIME("client touch down", START);
 				(*widget->touch_down_handler)(widget, input, 
 							      serial, time, id,
 							      sx, sy,
diff --git a/desktop-shell/shell.c b/desktop-shell/shell.c
index 68c891f..1223613 100644
--- a/desktop-shell/shell.c
+++ b/desktop-shell/shell.c
@@ -39,7 +39,6 @@
 #include "workspaces-server-protocol.h"
 #include "../shared/config-parser.h"
 #include "xdg-shell-server-protocol.h"
-#include "profile_analyzer.h"
 
 #define DEFAULT_NUM_WORKSPACES 1
 #define DEFAULT_WORKSPACE_CHANGE_ANIMATION_LENGTH 200
@@ -1535,7 +1534,7 @@ touch_move_grab_down(struct weston_touch_grab *grab, uint32_t time,
 static void
 touch_move_grab_up(struct weston_touch_grab *grab, uint32_t time, int touch_id)
 {
-	ADD_PROFILING_START("shell touch up");
+	PERF_TIME("shell touch up", START);
 	struct weston_touch_move_grab *move =
 		(struct weston_touch_move_grab *) container_of(
 			grab, struct shell_touch_grab, grab);
@@ -1547,14 +1546,14 @@ touch_move_grab_up(struct weston_touch_grab *grab, uint32_t time, int touch_id)
 		shell_touch_grab_end(&move->base);
 		free(move);
 	}
-	ADD_PROFILING_END("shell touch up");
+	PERF_TIME("shell touch up", END);
 }
 
 static void
 touch_move_grab_motion(struct weston_touch_grab *grab, uint32_t time,
 		       int touch_id, wl_fixed_t sx, wl_fixed_t sy)
 {
-	ADD_PROFILING_START("shell touch motion");
+	PERF_TIME("shell touch motion", START);
 	struct weston_touch_move_grab *move = (struct weston_touch_move_grab *) grab;
 	struct shell_surface *shsurf = move->base.shsurf;
 	struct weston_surface *es;
@@ -1569,7 +1568,7 @@ touch_move_grab_motion(struct weston_touch_grab *grab, uint32_t time,
 	weston_view_set_position(shsurf->view, dx, dy);
 
 	weston_compositor_schedule_repaint(es->compositor);
-	ADD_PROFILING_END("shell touch motion");
+	PERF_TIME("shell touch motion", END);
 }
 
 static void
@@ -1763,7 +1762,7 @@ common_surface_move(struct wl_resource *resource,
 		    (surface_touch_move(shsurf, seat) < 0))
 			wl_resource_post_no_memory(resource);
 	}
-	ADD_PROFILING_END("shell process");
+	PERF_TIME("shell process", END);
 }
 
 static void
diff --git a/src/compositor.c b/src/compositor.c
index 238bc6c..c93d763 100644
--- a/src/compositor.c
+++ b/src/compositor.c
@@ -59,7 +59,6 @@
 #include "../shared/str-util.h"
 #include "git-version.h"
 #include "version.h"
-#include "profile_analyzer.h"
 
 static struct wl_list child_process_list;
 static struct weston_compositor *segv_compositor;
@@ -1910,7 +1909,7 @@ weston_output_repaint(struct weston_output *output, uint32_t msecs)
 	if (output->destroying)
 		return 0;
 
-	ADD_PROFILING_START("weston");
+	PERF_TIME("weston", START);
 	/* Rebuild the surface list and update surface transforms up front. */
 	weston_compositor_build_view_list(ec);
 
@@ -1950,8 +1949,8 @@ weston_output_repaint(struct weston_output *output, uint32_t msecs)
 	output->repaint_needed = 0;
 
 	weston_compositor_repick(ec);
-	ADD_PROFILING_END("weston");
-	ADD_PROFILING_START("graphic hardware");
+	PERF_TIME("weston", END);
+	PERF_TIME("graphic hardware", START);
 	wl_event_loop_dispatch(ec->input_loop, 0);
 
 	wl_list_for_each_safe(cb, cnext, &frame_callback_list, link) {
@@ -1980,12 +1979,12 @@ weston_compositor_read_input(int fd, uint32_t mask, void *data)
 WL_EXPORT void
 weston_output_finish_frame(struct weston_output *output, uint32_t msecs)
 {
-	ADD_PROFILING_END("graphic hardware");
 	struct weston_compositor *compositor = output->compositor;
 	struct wl_event_loop *loop =
 		wl_display_get_event_loop(compositor->wl_display);
 	int fd, r;
 
+	PERF_TIME("graphic hardware", END);
 	output->frame_time = msecs;
 
 	if (output->repaint_needed &&
@@ -2304,15 +2303,15 @@ void print_wcommit(struct wl_resource *resource, int start)
 
 	if (start) {
 		sprintf(str, "MESA_%d", id);
-		ADD_PROFILING_END(str);
+		PERF_TIME(str, END);
 		sprintf(str, "wcommit_%d", id);
-		ADD_PROFILING_END("client process");
-		ADD_PROFILING_START("wcommit");
-		ADD_PROFILING_START(str);
+		PERF_TIME("client process", END);
+		PERF_TIME("wcommit", START);
+		PERF_TIME(str, START);
 	} else {
 		sprintf(str, "wcommit_%d", id);
-		ADD_PROFILING_END(str);
-		ADD_PROFILING_END("wcommit");
+		PERF_TIME(str, END);
+		PERF_TIME("wcommit", END);
 	}
 }
 
diff --git a/src/compositor.h b/src/compositor.h
index f7b5823..951ba1c 100644
--- a/src/compositor.h
+++ b/src/compositor.h
@@ -39,6 +39,17 @@ extern "C" {
 #include "config-parser.h"
 #include "zalloc.h"
 
+/* Define macro for performance log */
+
+#ifndef __PERF_LOG
+#define __PERF_LOG
+#define START 0
+#define END 1
+#define PERF_TIME(msg, flag) \
+	weston_log("perf_%s:%s\n", flag?"end":"start", msg);
+#define PERF_ID(msg) weston_log("perf_id:%s\n", msg);
+#endif
+
 #ifndef MIN
 #define MIN(x,y) (((x) < (y)) ? (x) : (y))
 #endif
diff --git a/src/input.c b/src/input.c
index f08e887..3545370 100644
--- a/src/input.c
+++ b/src/input.c
@@ -33,7 +33,6 @@
 
 #include "../shared/os-compatibility.h"
 #include "compositor.h"
-#include "profile_analyzer.h"
 
 static void
 empty_region(pixman_region32_t *region)
@@ -251,8 +250,8 @@ default_grab_touch_down(struct weston_touch_grab *grab, uint32_t time,
 			wl_touch_send_down(resource, serial, time,
 						   touch->focus->surface->resource,
 						   touch_id, sx, sy);
-			ADD_PROFILING_END("touch down");
-			ADD_PROFILING_START("client process");
+			PERF_TIME("touch down", END);
+			PERF_TIME("client process", START);
 		}
 	}
 }
@@ -275,8 +274,8 @@ default_grab_touch_up(struct weston_touch_grab *grab,
 		wl_resource_for_each(resource, resource_list) {
 			id = wl_resource_get_id(resource);
 			wl_touch_send_up(resource, serial, time, touch_id);
-			ADD_PROFILING_END("touch up");
-			ADD_PROFILING_START("client process");
+			PERF_TIME("touch up", END);
+			PERF_TIME("client process", START);
 		}
 	}
 }
@@ -298,8 +297,8 @@ default_grab_touch_motion(struct weston_touch_grab *grab, uint32_t time,
 		surface_client = wl_resource_get_client(resource);
 		wl_touch_send_motion(resource, time,
 				     touch_id, sx, sy);
-		ADD_PROFILING_END("touch motion");
-		ADD_PROFILING_START("client process");
+		PERF_TIME("touch motion", END);
+		PERF_TIME("client process", START);
 	}
 }
 
@@ -1485,7 +1484,7 @@ void print_resid(struct weston_view *view)
 	char str_id[32];
 	uint32_t resource_id = wl_resource_get_id(view->surface->resource);
 	sprintf(str_id, "%d", resource_id);
-	ADD_PROFILING_ID(str_id);
+	PERF_ID(str_id);
 }
 
 WL_EXPORT void
@@ -1557,7 +1556,7 @@ notify_touch(struct weston_seat *seat, uint32_t time, int touch_id,
 
 	switch (touch_type) {
 	case WL_TOUCH_DOWN:
-		ADD_PROFILING_START("touch hardware down");
+		PERF_TIME("touch hardware down", START);
 		weston_compositor_idle_inhibit(ec);
 
 		touch->num_tp++;
@@ -1582,8 +1581,8 @@ notify_touch(struct weston_seat *seat, uint32_t time, int touch_id,
 
 		weston_compositor_run_touch_binding(ec, seat,
 						    time, touch_type);
-		ADD_PROFILING_END("touch hardware down");
-		ADD_PROFILING_START("touch down");
+		PERF_TIME("touch hardware down", END);
+		PERF_TIME("touch down", START);
 		grab->interface->down(grab, time, touch_id, sx, sy);
 		if (touch->num_tp == 1) {
 			touch->grab_serial =
@@ -1596,18 +1595,18 @@ notify_touch(struct weston_seat *seat, uint32_t time, int touch_id,
 
 		break;
 	case WL_TOUCH_MOTION:
-		ADD_PROFILING_START("touch hardware motion");
+		PERF_TIME("touch hardware motion", START);
 		ev = touch->focus;
 		if (!ev)
 			break;
 
 		weston_view_from_global_fixed(ev, x, y, &sx, &sy);
-		ADD_PROFILING_END("touch hardware motion");
-		ADD_PROFILING_START("touch motion");
+		PERF_TIME("touch hardware motion", END);
+		PERF_TIME("touch motion", START);
 		grab->interface->motion(grab, time, touch_id, sx, sy);
 		break;
 	case WL_TOUCH_UP:
-		ADD_PROFILING_START("touch hardware up");
+		PERF_TIME("touch hardware up", START);
 		if (touch->num_tp == 0) {
 			/* This can happen if we start out with one or
 			 * more fingers on the touch screen, in which
@@ -1619,8 +1618,8 @@ notify_touch(struct weston_seat *seat, uint32_t time, int touch_id,
 		weston_compositor_idle_release(ec);
 		touch->num_tp--;
 
-		ADD_PROFILING_END("touch hardware up");
-		ADD_PROFILING_START("touch up");
+		PERF_TIME("touch hardware up", END);
+		PERF_TIME("touch up", START);
 		grab->interface->up(grab, time, touch_id);
 		if (touch->num_tp == 0)
 			weston_touch_set_focus(seat, NULL);
diff --git a/src/profile_analyzer.h b/src/profile_analyzer.h
deleted file mode 100644
index 7eadfcd..0000000
--- a/src/profile_analyzer.h
+++ /dev/null
@@ -1,45 +0,0 @@
-#ifndef __PROFILE_ANALYZER_H
-#define __PROFILE_ANALYZER_H
-
-#include <time.h>
-#include <stdio.h>
-#include <sys/time.h>
-#define ADD_PROFILING_POINT(msg) \
-	do { \
-		struct timespec tp; \
-		unsigned int time; \
-		clock_gettime(CLOCK_REALTIME, &tp); \
-		time = (tp.tv_sec * 1000000L) + (tp.tv_nsec / 1000); \
-		fprintf(stderr, "[%10.3f]profiling_point:%s\n", \
-			time / 1000.0, msg); \
-	} while (0)
-#define ADD_PROFILING_ID(msg) \
-	do { \
-		struct timespec tp; \
-		unsigned int time; \
-		clock_gettime(CLOCK_REALTIME, &tp); \
-		time = (tp.tv_sec * 1000000L) + (tp.tv_nsec / 1000); \
-		fprintf(stderr, "[%10.3f]profiling_id:%s\n", \
-			time / 1000.0, msg); \
-	} while (0)
-
-#define ADD_PROFILING_START(msg) \
-	do { \
-		struct timespec tp; \
-		unsigned int time; \
-		clock_gettime(CLOCK_REALTIME, &tp); \
-		time = (tp.tv_sec * 1000000L) + (tp.tv_nsec / 1000); \
-		fprintf(stderr, "[%10.3f]profiling_start:%s\n", \
-			time / 1000.0, msg); \
-	} while (0)
-
-#define ADD_PROFILING_END(msg) \
-	do { \
-		struct timespec tp; \
-		unsigned int time; \
-		clock_gettime(CLOCK_REALTIME, &tp); \
-		time = (tp.tv_sec * 1000000L) + (tp.tv_nsec / 1000); \
-		fprintf(stderr, "[%10.3f]profiling_end:%s\n", \
-			time / 1000.0, msg); \
-	} while (0)
-#endif
-- 
1.7.9.5

