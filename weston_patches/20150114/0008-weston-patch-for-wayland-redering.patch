From 51a7e0ac6dfa4f9d16f3a26db9a1e310d992bf38 Mon Sep 17 00:00:00 2001
From: Zhang Xiaoyan <xiaoyanx.zhang@intel.com>
Date: Wed, 14 Jan 2015 10:39:00 +0800
Subject: [PATCH 8/8] weston patch for wayland redering

(1) Add log to analysis multi-touch redering performance
(2) Add log to analysis media player redering performance
(3) Modify old log to make weston log more reasonable
(4) Add "PERF_POINT" to mark touch segmentatiion
(5) Modify code written format to make it more clearly

Signed-off-by: Zhang Xiaoyan <xiaoyanx.zhang@intel.com>
               Wang Quanxian <quanxian.wang@intel.com>
---
 clients/perf_log.h    |   29 ++++++++++++++++++++++++--
 clients/simple-egl.c  |    4 +++-
 clients/window.c      |   17 +++++++++++----
 desktop-shell/shell.c |   32 +++++++++++++++++++++-------
 src/compositor.h      |    1 +
 src/input.c           |   55 +++++++++++++++++++++++++++++++++----------------
 6 files changed, 105 insertions(+), 33 deletions(-)

diff --git a/clients/perf_log.h b/clients/perf_log.h
index ec1ac75..1cb66dd 100644
--- a/clients/perf_log.h
+++ b/clients/perf_log.h
@@ -15,8 +15,33 @@
 		gettimeofday(&tv, NULL);\
 		brokendown_time = localtime(&tv.tv_sec);\
 		strftime(string, sizeof(string),\
-			 "%H:%M:%S", brokendown_time);\
+				 "%H:%M:%S", brokendown_time);\
 		fprintf(stderr, "[%s.%06li] perf_%s:%s\n",\
-			string, tv.tv_usec, flag?"end":"start", msg); \
+				string, tv.tv_usec, flag?"end":"start", msg); \
+	} while (0)
+
+#define PERF_ID(msg) \
+	do { \
+		struct timeval tv; \
+		struct tm *brokendown_time;\
+		char string[128];\
+		gettimeofday(&tv, NULL);\
+		brokendown_time = localtime(&tv.tv_sec);\
+		strftime(string, sizeof(string),\
+				 "%H:%M:%S", brokendown_time);\
+		fprintf(stderr, "[%s.%06li] perf_id:%s\n",\
+				string, tv.tv_usec, msg); \
+	} while (0)
+#define PERF_POINT(msg) \
+	do { \
+		struct timeval tv; \
+		struct tm *brokendown_time;\
+		char string[128];\
+		gettimeofday(&tv, NULL);\
+		brokendown_time = localtime(&tv.tv_sec);\
+		strftime(string, sizeof(string),\
+				 "%H:%M:%S", brokendown_time);\
+		fprintf(stderr, "[%s.%06li] perf_point:%s\n",\
+				string, tv.tv_usec, msg); \
 	} while (0)
 #endif
diff --git a/clients/simple-egl.c b/clients/simple-egl.c
index 70aed9e..e477d6e 100644
--- a/clients/simple-egl.c
+++ b/clients/simple-egl.c
@@ -373,7 +373,6 @@ void print_cid(struct window *window, int start)
 {
 	uint32_t id;
 	char str[32] = {};
-	char mesa_str[32] = {};
 
 	id = wl_proxy_get_id((struct wl_proxy *)window->surface);
 
@@ -381,6 +380,9 @@ void print_cid(struct window *window, int start)
 	if (start) {
 		/* client start */
 		PERF_TIME(str, START);
+		/* client id */
+		sprintf(str, "%d", id);
+		PERF_ID(str);
 	} else {
 		/* client end */
 		PERF_TIME(str, END);
diff --git a/clients/window.c b/clients/window.c
index ab5854e..a064d5a 100644
--- a/clients/window.c
+++ b/clients/window.c
@@ -2337,6 +2337,18 @@ frame_leave_handler(struct widget *widget,
 }
 
 static void
+print_cid(struct window *window)
+{
+	char str[32];
+	uint32_t id;
+	id = wl_proxy_get_id((struct wl_proxy *)window->main_surface->surface);
+	sprintf(str, "client process_%d", id);
+	PERF_TIME(str, END);
+	sprintf(str, "shell process_%d", id);
+	PERF_TIME(str, START);
+}
+
+static void
 frame_handle_status(struct window_frame *frame, struct input *input,
 		    uint32_t time, enum theme_location location)
 {
@@ -2369,8 +2381,7 @@ frame_handle_status(struct window_frame *frame, struct input *input,
 
 	if ((status & FRAME_STATUS_MOVE) && window->xdg_surface) {
 		input_ungrab(input);
-		PERF_TIME("client touch down", END);
-		PERF_TIME("shell process", START);
+		print_cid(window);
 		xdg_surface_move(window->xdg_surface,
 				 input_get_seat(input),
 				 window->display->serial);
@@ -3054,8 +3065,6 @@ touch_handle_down(void *data, struct wl_touch *wl_touch,
 			wl_list_insert(&input->touch_point_list, &tp->link);
 
 			if (widget->touch_down_handler) {
-				PERF_TIME("touch down", END);
-				PERF_TIME("client touch down", START);
 				(*widget->touch_down_handler)(widget, input, 
 							      serial, time, id,
 							      sx, sy,
diff --git a/desktop-shell/shell.c b/desktop-shell/shell.c
index 1223613..d070997 100644
--- a/desktop-shell/shell.c
+++ b/desktop-shell/shell.c
@@ -517,9 +517,6 @@ shell_touch_grab_start(struct shell_touch_grab *grab,
 	shsurf->grabbed = 1;
 
 	weston_touch_start_grab(touch, &grab->grab);
-	if (shell->child.desktop_shell)
-		weston_touch_set_focus(touch->seat,
-				       get_default_view(shell->grab_surface));
 }
 
 static void
@@ -1532,9 +1529,24 @@ touch_move_grab_down(struct weston_touch_grab *grab, uint32_t time,
 }
 
 static void
+print_shell_id(struct wl_resource *resource, const char *msg, int start)
+{
+	char str[32] = {};
+	uint32_t id;
+	id = wl_resource_get_id(resource);
+	sprintf(str, "%s_%d", msg, id);
+	if (start) {
+		PERF_TIME(str, START);
+	} else {
+		PERF_TIME(str, END);
+	}
+}
+
+static void
 touch_move_grab_up(struct weston_touch_grab *grab, uint32_t time, int touch_id)
 {
-	PERF_TIME("shell touch up", START);
+	print_shell_id(grab->touch->focus->surface->resource,
+				   "shell touch up", 1);
 	struct weston_touch_move_grab *move =
 		(struct weston_touch_move_grab *) container_of(
 			grab, struct shell_touch_grab, grab);
@@ -1546,16 +1558,18 @@ touch_move_grab_up(struct weston_touch_grab *grab, uint32_t time, int touch_id)
 		shell_touch_grab_end(&move->base);
 		free(move);
 	}
-	PERF_TIME("shell touch up", END);
+	print_shell_id(grab->touch->focus->surface->resource,
+				   "shell touch up", 0);
 }
 
 static void
 touch_move_grab_motion(struct weston_touch_grab *grab, uint32_t time,
 		       int touch_id, wl_fixed_t sx, wl_fixed_t sy)
 {
-	PERF_TIME("shell touch motion", START);
 	struct weston_touch_move_grab *move = (struct weston_touch_move_grab *) grab;
 	struct shell_surface *shsurf = move->base.shsurf;
+	print_shell_id(grab->touch->focus->surface->resource,
+				   "shell touch motion", 1);
 	struct weston_surface *es;
 	int dx = wl_fixed_to_int(grab->touch->grab_x + move->dx);
 	int dy = wl_fixed_to_int(grab->touch->grab_y + move->dy);
@@ -1568,7 +1582,8 @@ touch_move_grab_motion(struct weston_touch_grab *grab, uint32_t time,
 	weston_view_set_position(shsurf->view, dx, dy);
 
 	weston_compositor_schedule_repaint(es->compositor);
-	PERF_TIME("shell touch motion", END);
+	print_shell_id(grab->touch->focus->surface->resource,
+				   "shell touch motion", 0);
 }
 
 static void
@@ -1762,7 +1777,8 @@ common_surface_move(struct wl_resource *resource,
 		    (surface_touch_move(shsurf, seat) < 0))
 			wl_resource_post_no_memory(resource);
 	}
-	PERF_TIME("shell process", END);
+
+	print_shell_id(shsurf->surface->resource, "shell process", 0);
 }
 
 static void
diff --git a/src/compositor.h b/src/compositor.h
index e5dcca9..9dca566 100644
--- a/src/compositor.h
+++ b/src/compositor.h
@@ -48,6 +48,7 @@ extern "C" {
 #define PERF_TIME(msg, flag) \
 	weston_plog("perf_%s:%s\n", flag?"end":"start", msg);
 #define PERF_ID(msg) weston_plog("perf_id:%s\n", msg);
+#define PERF_POINT(msg) weston_plog("perf_point:%s\n", msg);
 #endif
 
 #ifndef MIN
diff --git a/src/input.c b/src/input.c
index 3545370..6ab580a 100644
--- a/src/input.c
+++ b/src/input.c
@@ -246,12 +246,11 @@ default_grab_touch_down(struct weston_touch_grab *grab, uint32_t time,
 	if (!wl_list_empty(resource_list) && touch->focus) {
 		serial = wl_display_next_serial(display);
 		wl_resource_for_each(resource, resource_list) {
-			id = wl_resource_get_id(resource);
 			wl_touch_send_down(resource, serial, time,
 						   touch->focus->surface->resource,
 						   touch_id, sx, sy);
-			PERF_TIME("touch down", END);
-			PERF_TIME("client process", START);
+			print_touch_log("touch down", touch, 0);
+			print_touch_log("client process", touch, 1);
 		}
 	}
 }
@@ -274,8 +273,8 @@ default_grab_touch_up(struct weston_touch_grab *grab,
 		wl_resource_for_each(resource, resource_list) {
 			id = wl_resource_get_id(resource);
 			wl_touch_send_up(resource, serial, time, touch_id);
-			PERF_TIME("touch up", END);
-			PERF_TIME("client process", START);
+			print_touch_log("touch up", touch, 0);
+			print_touch_log("client process", touch, 1);
 		}
 	}
 }
@@ -297,8 +296,8 @@ default_grab_touch_motion(struct weston_touch_grab *grab, uint32_t time,
 		surface_client = wl_resource_get_client(resource);
 		wl_touch_send_motion(resource, time,
 				     touch_id, sx, sy);
-		PERF_TIME("touch motion", END);
-		PERF_TIME("client process", START);
+		print_touch_log("touch motion", touch, 0);
+		print_touch_log("client process", touch, 1);
 	}
 }
 
@@ -1480,13 +1479,31 @@ notify_keyboard_focus_out(struct weston_seat *seat)
 
 void print_resid(struct weston_view *view)
 {
-	uint32_t surface_id = 0;
 	char str_id[32];
 	uint32_t resource_id = wl_resource_get_id(view->surface->resource);
 	sprintf(str_id, "%d", resource_id);
 	PERF_ID(str_id);
 }
 
+void print_touch_log(const char *msg, struct weston_touch *touch, int start)
+{
+	struct weston_surface *surface;
+	char str[32] = {};
+	uint32_t id;
+	if (touch->focus) {
+		surface = touch->focus->surface;
+		id = wl_resource_get_id(surface->resource);
+	} else
+		id = 0;
+
+	sprintf(str, "%s_%d", msg, id);
+	if (start) {
+		PERF_TIME(str, START);
+	} else {
+		PERF_TIME(str, END);
+	}
+}
+
 WL_EXPORT void
 weston_touch_set_focus(struct weston_seat *seat, struct weston_view *view)
 {
@@ -1556,7 +1573,7 @@ notify_touch(struct weston_seat *seat, uint32_t time, int touch_id,
 
 	switch (touch_type) {
 	case WL_TOUCH_DOWN:
-		PERF_TIME("touch hardware down", START);
+		print_touch_log("touch hardware down", touch, 1);
 		weston_compositor_idle_inhibit(ec);
 
 		touch->num_tp++;
@@ -1581,8 +1598,8 @@ notify_touch(struct weston_seat *seat, uint32_t time, int touch_id,
 
 		weston_compositor_run_touch_binding(ec, seat,
 						    time, touch_type);
-		PERF_TIME("touch hardware down", END);
-		PERF_TIME("touch down", START);
+		print_touch_log("touch hardware down", touch, 0);
+		print_touch_log("touch down", touch, 1);
 		grab->interface->down(grab, time, touch_id, sx, sy);
 		if (touch->num_tp == 1) {
 			touch->grab_serial =
@@ -1595,18 +1612,18 @@ notify_touch(struct weston_seat *seat, uint32_t time, int touch_id,
 
 		break;
 	case WL_TOUCH_MOTION:
-		PERF_TIME("touch hardware motion", START);
+		print_touch_log("touch hardware motion", touch, 1);
 		ev = touch->focus;
 		if (!ev)
 			break;
 
 		weston_view_from_global_fixed(ev, x, y, &sx, &sy);
-		PERF_TIME("touch hardware motion", END);
-		PERF_TIME("touch motion", START);
+		print_touch_log("touch hardware motion", touch, 0);
+		print_touch_log("touch motion", touch, 1);
 		grab->interface->motion(grab, time, touch_id, sx, sy);
 		break;
 	case WL_TOUCH_UP:
-		PERF_TIME("touch hardware up", START);
+		print_touch_log("touch hardware up", touch, 1);
 		if (touch->num_tp == 0) {
 			/* This can happen if we start out with one or
 			 * more fingers on the touch screen, in which
@@ -1618,11 +1635,13 @@ notify_touch(struct weston_seat *seat, uint32_t time, int touch_id,
 		weston_compositor_idle_release(ec);
 		touch->num_tp--;
 
-		PERF_TIME("touch hardware up", END);
-		PERF_TIME("touch up", START);
+		print_touch_log("touch hardware up", touch, 0);
+		print_touch_log("touch up", touch, 1);
 		grab->interface->up(grab, time, touch_id);
-		if (touch->num_tp == 0)
+		if (touch->num_tp == 0) {
+			PERF_POINT("touch segmentation");
 			weston_touch_set_focus(seat, NULL);
+		}
 		break;
 	}
 }
-- 
1.7.9.5

